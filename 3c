#include <stdio.h>
#include <stdlib.h>
#define n1 10
#define n2 100
int cnt;
int sort(int *a, int n) {
int key, j;
for (int i = 0; i < n; i++) {
key = a[i];
for (j = i - 1; j >= 0 && a[j] > key; j--) {
cnt++;
a[j + 1] = a[j];
}
a[j + 1] = key;
}
}
void analysis() {
int *a, n;
FILE *f1, *f2;
f1 = fopen("BC3c.txt", "a");
f2 = fopen("WC3c.txt", "a");
for (n = n1; n <= n2; n += 10) {
a = (int *)malloc(n * sizeof(int));
// BEST CASE
for (int i = 0; i < n; i++)
a[i] = i + 1;
cnt = 0;
sort(a, n);
fprintf(f1, "%d\t%d\n", n, cnt);
// WORST CASE
for (int i = n - 1; i >= 0; i--)
a[i] = n - i + 1;
cnt = 0;
sort(a, n);
fprintf(f2, "%d\t%d\n", n, cnt);
}
system("gnuplot>load 'command.txt'");
fclose(f1);
fclose(f2);
}
void correctness() {
int a[20], n, key, pos;
printf("enter the number of elements required: ");
scanf("%d", &n);
printf("enter the elements: ");
for (int i = 0; i < n; i++)
scanf("%d", &a[i]);
printf("array elements after sorting:\n");
sort(a, n);
for (int i = 0; i < n; i++)
printf("%d\t", a[i]);
printf("\n");
}
void main() {
int ch;
printf("1.analysis\t\t2.correctness\t\t0.exit\n");
for (;;) {
printf("enter choice: ");
scanf("%d", &ch);
switch (ch) {
case 1:
analysis();
break;
case 2:
correctness();
break;
case 0:
printf("exiting..\n");
exit(0);
default:
printf("wrong choice!!\n");
break;
}
}
}
set xrange
set yrange
set xlabel 'N
set ylabel 'operation count'
set style data linespoints
plot 'BC3c.txt' title 'bestcase' , 'WC3c.txt' title 'worstcase'
pause -1 'hit any way'
